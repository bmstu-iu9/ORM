CREATE TABLE IF NOT EXISTS ShopDB.shopschema.Shop
(
  shopCode INT PRIMARY KEY NOT NULL,
  shopName VARCHAR(25) UNIQUE NOT NULL,
  isOutlet BOOLEAN DEFAULT TRUE CHECK (isOutlet IS NOT NULL) NOT NULL,
  address  VARCHAR(25) NOT NULL,
  city int[][] NOT NULL,
  isClosed REAL NOT NULL DEFAULT 1.3,
  opened DATE DEFAULT '02-12-1997'::DATE,

  area FLOAT(8) NOT NULL,
  countOfVisitorsToday INT NOT NULL CHECK (countOfVisitorsToday >= 0)
);

CREATE TABLE IF NOT EXISTS ShopDB.shopschema.Employee
(
  employeeCode INT PRIMARY KEY NOT NULL, --//TODO support this DEFAULT nextval('ShopDB.shopschema.emp_codes'),
  firstName VARCHAR(25) NOT NULL,
  lastName VARCHAR(25) NOT NULL,
  middleName VARCHAR(25),
  dateOfBirth DATE NOT NULL,
  phone CHAR(11) NOT NULL UNIQUE,
  position VARCHAR(25) NOT NULL,
  isFired BOOLEAN DEFAULT FALSE NOT NULL,
  salary float NOT NULL,
  sex boolean NOT NULL,
  chief INT,
  shopCode INT,

  FOREIGN KEY (shopCode) REFERENCES ShopDB.ShopSchema.Shop (shopCode) ON DELETE CASCADE
);


CREATE or replace function go() returns int as $$
begin
  if (1>2) then
    RAISE 'bad';
    --return 1;

  else
    declare b int;
    begin
      SELECT * from shop join shop2 on a = b where c > 100;
      LOOP
        SELECT a from b;
        EXIT WHEN a = 2;
      END LOOP;
      b := 10;
      return b;
    end;
  end if;
  return 1;
end;
$$ language plpgsql;